/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../context"
import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  MemberCreateInput: { // input type
    created_at: any; // DateTime!
    email?: string | null; // String
    member_id: number; // Int!
    modified_at: any; // DateTime!
    name: string; // String!
  }
  MemberWhereUniqueInput: { // input type
    email?: string | null; // String
    member_id?: number | null; // Int
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Member: prisma.Member;
  Mutation: {};
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  MemberCreateInput: NexusGenInputs['MemberCreateInput'];
  MemberWhereUniqueInput: NexusGenInputs['MemberWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Member: { // field return type
    email: string | null; // String
    member_id: number; // Int!
    name: string; // String!
  }
  Mutation: { // field return type
    signupMember: NexusGenRootTypes['Member']; // Member!
  }
  Query: { // field return type
    Member: NexusGenRootTypes['Member'] | null; // Member
    members: NexusGenRootTypes['Member'][]; // [Member!]!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    signupMember: { // args
      data: NexusGenInputs['MemberCreateInput']; // MemberCreateInput!
    }
  }
  Query: {
    Member: { // args
      where: NexusGenInputs['MemberWhereUniqueInput']; // MemberWhereUniqueInput!
    }
    members: { // args
      after?: number | null; // Int
      before?: number | null; // Int
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Member" | "Mutation" | "Query";

export type NexusGenInputNames = "MemberCreateInput" | "MemberWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}